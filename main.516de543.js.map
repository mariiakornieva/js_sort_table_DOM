{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","tableBody","tableRows","querySelectorAll","addEventListener","ev","header","target","closest","contains","values","map","row","cells","cellIndex","textContent","sort","a","b","replace","forEach","idx"],"mappings":";AAAA,aAMA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAYF,SAASC,cAAc,SACnCE,EAAYD,EAAUE,iBAAiB,MAE7CL,EAAUM,iBAAiB,QAAS,SAAAC,GAC5BC,IAAAA,EAASD,EAAGE,OAAOC,QAAQ,MAE7B,GAACF,GAAWR,EAAUW,SAASH,GAA/B,CAIEI,IAAAA,EAAS,EAAIR,GAAWS,IAAI,SAAAC,GACzBA,OAAAA,EAAIC,MAAMR,EAAGE,OAAOO,WAAWC,cAGhCT,OAAAA,EAAOS,aACR,IAAA,MACHL,EAAOM,KAAK,SAACC,EAAGC,GAAM,OAACD,GAAKC,IAC5B,MACG,IAAA,SACHR,EAAOM,KAAK,SAACC,EAAGC,GAAM,OAACD,EAAEE,QAAQ,MAAO,KAAOD,EAAEC,QAAQ,MAAO,MAChE,MACG,IAAA,OACA,IAAA,WACL,QACET,EAAOM,OAIXd,EAAUkB,QAAQ,SAACR,EAAKS,GACtBT,EAAIC,MAAMR,EAAGE,OAAOO,WAAWC,YAAcL,EAAOW","file":"main.516de543.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nconst tableRows = tableBody.querySelectorAll('tr');\n\ntableHead.addEventListener('click', ev => {\n  const header = ev.target.closest('th');\n\n  if (!header || !tableHead.contains(header)) {\n    return;\n  }\n\n  const values = [...tableRows].map(row => {\n    return row.cells[ev.target.cellIndex].textContent;\n  });\n\n  switch (header.textContent) {\n    case 'Age':\n      values.sort((a, b) => +a - +b);\n      break;\n    case 'Salary':\n      values.sort((a, b) => +a.replace(/\\D/g, '') - +b.replace(/\\D/g, ''));\n      break;\n    case 'Name':\n    case 'Position':\n    default:\n      values.sort();\n      break;\n  }\n\n  tableRows.forEach((row, idx) => {\n    row.cells[ev.target.cellIndex].textContent = values[idx];\n  });\n});\n"]}